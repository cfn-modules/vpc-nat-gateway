---
# Copyright 2018 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'cfn-modules: AWS VPC NAT gateway'
# cfn-modules:implements()
Parameters:
  PublicSubnetModule:
    Description: 'Stack name of vpc-subnet module that acts as the public subnet of the availability zone'
    Type: String
  PrivateSubnetModule:
    Description: 'Stack name of vpc-subnet module that acts as the private subnet of the availability zone'
    Type: String
  AlertingModule:
    Description: 'Optional but recommended stack name of alerting module.'
    Type: String
    Default: ''
Conditions:
  HasAlertingModule: !Not [!Equals [!Ref AlertingModule, '']]
Resources:
  ElasticIp:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt 'ElasticIp.AllocationId'
      SubnetId:
        'Fn::ImportValue': !Sub '${PublicSubnetModule}-Id'
  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        'Fn::ImportValue': !Sub '${PrivateSubnetModule}-RouteTableId'
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NatGateway
  AlarmNatGatewayErrorPortAllocation:
    Condition: HasAlertingModule
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'NAT gateway could not allocate a source port'
      Namespace: 'AWS/NATGateway'
      MetricName: ErrorPortAllocation
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - 'Fn::ImportValue': !Sub '${AlertingModule}-Arn'
      Dimensions:
      - Name: NatGatewayId
        Value: !Ref NatGateway
  AlarmNatGatewayPacketsDropCount:
    Condition: HasAlertingModule
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'NAT gateway dropped packets'
      Namespace: 'AWS/NATGateway'
      MetricName: PacketsDropCount
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - 'Fn::ImportValue': !Sub '${AlertingModule}-Arn'
      Dimensions:
      - Name: NatGatewayId
        Value: !Ref NatGateway
  AlarmNatGatewayBandwidth:
    Condition: HasAlertingModule
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - 'Fn::ImportValue': !Sub '${AlertingModule}-Arn'
      AlarmDescription: 'NAT gateway bandwidth utilization is over 80%'
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      Metrics:
      - Id: 'in1'
        Label: 'InFromDestination'
        MetricStat:
          Metric:
            Namespace: 'AWS/NATGateway'
            MetricName: BytesInFromDestination # bytes per minute
            Dimensions:
            - Name: NatGatewayId
              Value: !Ref NatGateway
          Period: 60
          Stat: Sum
          Unit: Bytes
        ReturnData: false
      - Id: 'in2'
        Label: 'InFromSource'
        MetricStat:
          Metric:
            Namespace: 'AWS/NATGateway'
            MetricName: BytesInFromSource # bytes per minute
            Dimensions:
            - Name: NatGatewayId
              Value: !Ref NatGateway
          Period: 60
          Stat: Sum
          Unit: Bytes
        ReturnData: false
      - Id: 'out1'
        Label: 'OutToDestination'
        MetricStat:
          Metric:
            Namespace: 'AWS/NATGateway'
            MetricName: BytesOutToDestination # bytes per minute
            Dimensions:
            - Name: NatGatewayId
              Value: !Ref NatGateway
          Period: 60
          Stat: Sum
          Unit: Bytes
        ReturnData: false
      - Id: 'out2'
        Label: 'OutToSource'
        MetricStat:
          Metric:
            Namespace: 'AWS/NATGateway'
            MetricName: BytesOutToSource # bytes per minute
            Dimensions:
            - Name: NatGatewayId
              Value: !Ref NatGateway
          Period: 60
          Stat: Sum
          Unit: Bytes
        ReturnData: false
      - Expression: '(in1+in2+out1+out2)/60*8/1000/1000/1000' # to Gbit/s
        Id: 'bandwidth'
        Label: 'Bandwidth'
        ReturnData: true
      Threshold: 80 # hard limit is 100 Gbit/s
      TreatMissingData: notBreaching
  AlarmNatGatewayPackets:
    Condition: HasAlertingModule
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - 'Fn::ImportValue': !Sub '${AlertingModule}-Arn'
      AlarmDescription: 'NAT gateway packets utilization is over 80%'
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      Metrics:
      - Id: 'in1'
        Label: 'InFromDestination'
        MetricStat:
          Metric:
            Namespace: 'AWS/NATGateway'
            MetricName: PacketsInFromDestination # packets per minute
            Dimensions:
            - Name: NatGatewayId
              Value: !Ref NatGateway
          Period: 60
          Stat: Sum
          Unit: Count
        ReturnData: false
      - Id: 'in2'
        Label: 'InFromSource'
        MetricStat:
          Metric:
            Namespace: 'AWS/NATGateway'
            MetricName: PacketsInFromSource # packets per minute
            Dimensions:
            - Name: NatGatewayId
              Value: !Ref NatGateway
          Period: 60
          Stat: Sum
          Unit: Count
        ReturnData: false
      - Id: 'out1'
        Label: 'OutToDestination'
        MetricStat:
          Metric:
            Namespace: 'AWS/NATGateway'
            MetricName: PacketsOutToDestination # packets per minute
            Dimensions:
            - Name: NatGatewayId
              Value: !Ref NatGateway
          Period: 60
          Stat: Sum
          Unit: Count
        ReturnData: false
      - Id: 'out2'
        Label: 'OutToSource'
        MetricStat:
          Metric:
            Namespace: 'AWS/NATGateway'
            MetricName: PacketsOutToSource # packets per minute
            Dimensions:
            - Name: NatGatewayId
              Value: !Ref NatGateway
          Period: 60
          Stat: Sum
          Unit: Count
        ReturnData: false
      - Expression: '(in1+in2+out1+out2)/60' # to packets per second
        Id: 'packets'
        Label: 'Packets'
        ReturnData: true
      Threshold: 8000000 # hard limit is 10,000,000 packets per second
      TreatMissingData: notBreaching
Outputs:
  ModuleId:
    Value: 'vpc-nat-gateway'
  ModuleVersion:
    Value: '1.1.2'
  StackName:
    Value: !Ref 'AWS::StackName'
  PublicIpAddress:
    Description: 'The public IP address of the NAT gateway.'
    Value: !Ref ElasticIp
    Export:
      Name: !Sub '${AWS::StackName}-PublicIpAddress'
